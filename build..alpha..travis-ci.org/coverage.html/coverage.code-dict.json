{"/home/travis/build/npmtest/node-npmtest-cute-stack/test.js":"/* istanbul instrument in package npmtest_cute_stack */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-cute-stack/lib.npmtest_cute_stack.js":"/* istanbul instrument in package npmtest_cute_stack */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_cute_stack = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_cute_stack = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-cute-stack/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-cute-stack && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_cute_stack */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_cute_stack\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_cute_stack.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_cute_stack.rollup.js'] =\n            local.assetsDict['/assets.npmtest_cute_stack.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_cute_stack.__dirname + '/lib.npmtest_cute_stack.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-cute-stack/node_modules/cute-stack/index.js":"var util = require('util');\nvar colors = require('colors');\nvar Table = require('cli-table');\nvar treeify = require('treeify');\n\nmodule.exports = cute;\n\ncute.uncute = function () {\n  Error.stackTraceLimit = 10;\n  Error.prepareStackTrace = null;\n}\ncute.noStack = function () { cute(null, 0); }\n\ncute.ui = {\n  default: pretty,\n  pretty: pretty,\n  table: table,\n  json: JSON.stringify.bind(JSON),\n  tree: tree\n}\n\ncute.ui['pretty-json'] = function (frame) {\n  return JSON.stringify(frame, 0, 2);\n}\n\ncute.ui['pretty-json'].print = cute.ui.json.print = function (data) {\n  return '['+data+']'\n}\n\nfunction cute(type, stackSize, opts) {\n  opts = opts || {}\n  if (typeof type === 'number') {\n    stackSize = type;\n    type = null;\n  }\n  if (typeof stackSize === 'number') {\n    Error.stackTraceLimit = stackSize;\n  }\n  if (opts.emulated) {\n    Error.stackTraceLimit += 7;\n  }\n  if (typeof type !== 'function') {\n    type = cute.ui[type] || cute.ui.default;\n  }\n  if (type.init) { type.init(); }\n\n  var filter = type.filter ? type.filter : function (x) { return x; };\n\n  function details(frame) {\n    var fn = frame.getFunction();\n    var sig = fn ? \n      ((fn+'').split('{')[0].trim() + ' { [body] }') : \n      findSig(frame);\n\n    return {\n      file: frame.getFileName()\n        .replace(process.cwd(), '.')\n        .replace(/\\/node_modules\\//g, '♦'),\n      line: frame.getLineNumber(),\n      column: frame.getColumnNumber(),\n      name: frame.getFunctionName(),\n      meth: frame.getMethodName(),\n      sig: sig,\n      id: function () {\n        return this.name || this.meth || this.sig;\n      }\n    }\n  }\n\n  // https://code.google.com/p/v8-wiki/wiki/JavaScriptStackTraceApi\n  Error.prepareStackTrace = function (error, stack) {\n    if (opts.emulated) { stack = strip(stack); }\n\n    var text = (error+'').bgRed.white\n      + '\\n\\n' + (type.print||join)(\n        stack.map(details).filter(filter).map(type)\n      );\n\n    return text;\n  }\n  return cute;\n}\n\nfunction pretty(frame) {\n  return [\n    frame.file.cyan,\n    (' ' + frame.line + ',' + frame.column + ' ').bgYellow.black,\n    (' ' + (frame.id()) + ' ').gray\n    ].join(' ') + '\\n';\n}\n\nfunction join(a) {\n  return Array.prototype.join.call(a, '');\n}\n\ntable.init = function () {\n\n  table._ = new Table({\n    head: ['file', 'line', 'col', 'name/sig'],\n    colWidths: [20, 8, 6, 46]\n\n  })\n\n\n}\n\ntable.print = function () {\n  var t = table._ + '';\n  table._ = null;\n  return t;\n}\n\nfunction table(frame) {\n  var file = (frame.file.length > 18) ?\n    '…' + frame.file.substring(-16) :\n    frame.file;\n\n  table._.push([\n    file, frame.line, frame.column, frame.id()\n  ]);\n}\n\nfunction tree(frame) {\n  return {\n    file: frame.file,\n    line: frame.line,\n    column: frame.column,\n    id: frame.id()\n  };\n}\n\ntree.print = function treePrint(frames) {\n  if (!frames.length) {\n    return;\n  }\n\n  frames.reduce(function (prev, curr) {\n    if (prev !== curr) {\n      prev.caller = curr;\n    }\n    return curr;\n  }, frames[0]);\n\n  return treeify.asTree(frames[0], true);\n};\n\nfunction findSig(frame) {\n  var path = require('path');\n  var mod = require('module');\n  var name = frame.getFileName();\n  var line = frame.getLineNumber();\n  var col = frame.getColumnNumber();\n  var comments = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\n  var sig = '';\n  mod.wrap = (function (wrap) {\n    return function (script) {\n      script = mod.wrapper[0] + script + mod.wrapper[1];\n      \n      var lines = script.split('\\n');\n\n      var match = lines[line]\n        .substr(0, col)\n        .replace(comments, '')\n        .match(/function.+{/);\n\n      if (match) {\n        sig = match[0] + ' [body] }';\n        return;\n      }\n      \n      lines.slice(0, line).reverse().some(function (l, ix) {\n        var match = l\n          .replace(comments, '')\n          .match(/function\\s*\\(.+\\)/m);\n\n        if (match) {\n          sig = lines[lines.indexOf(l)]\n              .replace(comments, '')\n              .match(/function.+{/)[0] + ' [body] }';\n        }  \n        return match;\n      });\n      \n      mod.wrap = wrap;\n      return script;\n    };\n  }(mod.wrap));\n  \n  try { \n    if (path.join(__dirname + '/cmd.js') !== name) {\n      require(require.resolve(name.replace(path.extname(name), '')));\n    }\n\n  } catch (e) {}\n\n  return sig;\n}\n\nfunction strip(stack) {\n  var loadfn = stack.filter(function (frame) { \n    return /cmd\\.js/.test(frame.getFileName()) && frame.getFunctionName() === 'load'\n  })[0];\n  var startFrame = stack.indexOf(loadfn);\n  var endFrame = stack.indexOf(stack.slice(startFrame, stack.length).filter(function (frame) {\n    return /module\\.js/.test(frame.getFileName()) && frame.getFunctionName() === 'Module.runMain'\n  })[0]);\n  return stack.slice(0, startFrame).concat(stack.slice(endFrame, stack.length))\n}\n\n\n\n","/home/travis/build/npmtest/node-npmtest-cute-stack/node_modules/cute-stack/cmd.js":"#!/usr/bin/env node\n\nprocess.argv.splice(1, 2, process.argv[2]);\nvar argv = require('minimist')(\n  process.argv.slice(1).filter(Boolean), {\n    alias: {\n      t: 'type',\n      s: ['stacksize', 'stackSize']\n    }\n  }\n);\n\nvar fs = require('fs');\nvar path = require('path');\nvar Module = require('module');\nvar spawn = require('child_process').spawn;\nvar setFlagsFromString = require('./set-flags');\nvar pack = require('./package.json');\n\nvar type = argv.type;\nvar stackSize = argv.stacksize;\nstrip('-t');\nstrip('--type');\nstrip('-s');\nstrip('-stacksize');\nstrip('-stackSize');\n\nfunction strip(flag) {\n   var n = 2;\n   var i = process.argv.indexOf(flag);\n   if (i < 0) return\n   if (process.argv[i + 1][0] === '-') n = 1\n   process.argv.splice(i, n);\n}\n\nfunction delegate() {\n  return spawn('node', process.argv\n    .slice(1)\n    .filter(Boolean), {\n    stdio: 'inherit',\n    env: process.env,\n    cwd: process.cwd()\n  }) \n}\n\nfunction prefixEval(letter) {\n  argv[letter] = 'require(\"' + __dirname + '/\")(\"'+type+'\",'  + stackSize + ');\\n' + argv[letter];\n  process.argv[process.argv.indexOf('-'+letter)+1] = argv[letter];\n}\n\nfunction evalArg(arg) {\n  prefixEval(arg);\n  delegate();\n}\n\nfunction version () {\n  process.stdout.write('Cute: ' + pack.version);\n  process.stdout.write('\\nNode: ')\n  delegate();\n}\n\nfunction help() {\n  delegate();\n  setTimeout(function () {\n    console.log('\\n=============================\\n')\n    fs.createReadStream(path.join(__dirname, 'usage.txt')).pipe(process.stdout);  \n  }, 100);\n}\n\nfunction unsupported(flag) {\n  console.log('--' + flag + ' is currently unsupported. PR\\'s welcome!');\n}\n\nfunction load() {\n  setFlagsFromString(process.argv.slice(2).join(' '));\n  require('./')(type, stackSize, {emulated: true});\n\n  process.argv[1] = require.resolve(path.resolve(process.cwd(), process.argv[1]));\n  \n  Module.runMain();\n}\n\nswitch (true) {\n\n  default: return load();\n\n  case \n    !!\n    argv.p: return evalArg('p');\n\n  case \n    !!\n    argv.e: return evalArg('e');\n\n  case\n    !!\n    (argv.v || argv.version): return version();\n\n  case\n    !!\n    (argv.help || argv.h): return help();\n\n  case\n    !!\n    argv['no-deprecation']:\n      return unsupported('no-deprecation');\n  \n  case \n    !!\n    argv['trace-deprecation']: \n      return unsupported('trace-deprecation'); \n\n  case\n    !!\n    argv['max-stack-size']: \n      return unsupported('max-stack-size');\n\n  case\n    !!\n    argv['enable-ssl2']: \n      return unsupported('enable-ssl2');\n\n  case\n    !!\n    argv['enable-ssl3']: \n      return unsupported('enable-ssl3');\n\n  case\n    !!\n    (argv.i || argv['v8-options'] || !argv._.length):\n      return delegate();\n}\n\n","/home/travis/build/npmtest/node-npmtest-cute-stack/node_modules/cute-stack/postinstall.js":"var spawn = require('child_process').spawn;\n\nif (!+process.versions.node[0]) {\n  console.log('\\u001b[33minstall setflags on 0.10 and 0.12\\u001b[0m');\n  var npm = process.platform === 'win32' ? 'npm.cmd' : 'npm';\n  spawn(npm, ['i', 'setflags'], {stdio: 'inherit'});\n}\n","/home/travis/build/npmtest/node-npmtest-cute-stack/node_modules/cute-stack/set-flags.js":"module.exports = !+process.versions.node[0] ? \n  require('setflags').setFlags : \n  require('v8').setFlagsFromString\n\n\n"}